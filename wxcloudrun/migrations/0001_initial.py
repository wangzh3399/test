# Generated by Django 4.2 on 2023-05-30 15:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='indicators',
            fields=[
                ('indicatorid', models.AutoField(primary_key=True, serialize=False)),
                ('indicatorname', models.CharField(max_length=32, verbose_name='指标名称')),
                ('type', models.CharField(max_length=8, verbose_name='指标类型')),
                ('changetime', models.DateTimeField(auto_now=True, verbose_name='变更时间')),
                ('desc', models.CharField(max_length=256, verbose_name='指标描述')),
            ],
            options={
                'verbose_name': '指标标准库',
                'verbose_name_plural': '指标标准库',
                'db_table': 'indicators',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='stockpool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poolname', models.CharField(max_length=16, verbose_name='股票池名称')),
            ],
            options={
                'verbose_name': '股票池',
                'verbose_name_plural': '股票池',
                'db_table': 'stockpool',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='strategypool',
            fields=[
                ('strategyid', models.AutoField(primary_key=True, serialize=False)),
                ('strategyname', models.CharField(max_length=16, verbose_name='策略名')),
                ('strategydesc', models.CharField(max_length=256, verbose_name='策略描述')),
                ('createtime', models.CharField(max_length=20, verbose_name='创建时间')),
                ('owntime', models.CharField(max_length=20, verbose_name='归属时间')),
                ('changetime', models.DateTimeField(auto_now=True, verbose_name='变更时间')),
                ('validtime', models.CharField(max_length=20, verbose_name='有效期')),
                ('runstatus', models.CharField(max_length=16, verbose_name='策略运行状态')),
                ('buyoutprice', models.IntegerField(null=True, verbose_name='买断售价')),
                ('unitprice', models.IntegerField(null=True, verbose_name='购买时间单价')),
                ('protectlevel', models.IntegerField(null=True, verbose_name='策略保护级别')),
                ('linkid', models.IntegerField(null=True, verbose_name='绑定到某个策略')),
                ('popular', models.IntegerField(null=True, verbose_name='策略点赞热度')),
            ],
            options={
                'verbose_name': '用户策略',
                'verbose_name_plural': '用户策略',
                'db_table': 'strategypool',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='usermanager',
            fields=[
                ('userid', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='用户id')),
                ('useraccount', models.CharField(max_length=32, verbose_name='微信的账号用户名')),
                ('username', models.CharField(max_length=32, verbose_name='微信昵称')),
                ('registtime', models.CharField(max_length=20, verbose_name='注册时间')),
                ('uuid', models.CharField(max_length=32, verbose_name='用户标识')),
                ('level', models.CharField(max_length=8, verbose_name='用户等级')),
                ('valid', models.BooleanField(null=True, verbose_name='生效状态')),
                ('validtime', models.CharField(max_length=20, verbose_name='截止有效时间')),
                ('cashflow', models.IntegerField(null=True, verbose_name='流水')),
            ],
            options={
                'verbose_name': '用户管理',
                'verbose_name_plural': '用户管理',
                'db_table': 'usermanager',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='strategyyields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yields', models.DecimalField(decimal_places=4, max_digits=7, null=True, verbose_name='收益率')),
                ('starttime', models.CharField(max_length=20, verbose_name='起始时间')),
                ('endtime', models.CharField(max_length=20, verbose_name='终止时间')),
                ('poolname', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wxcloudrun.stockpool')),
                ('strategyid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wxcloudrun.strategypool')),
            ],
            options={
                'verbose_name': '策略收益',
                'verbose_name_plural': '策略收益',
                'db_table': 'strategyyields',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='strategypool',
            name='creatorid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='buyer', to='wxcloudrun.usermanager', verbose_name='策略创建者'),
        ),
        migrations.AddField(
            model_name='strategypool',
            name='ownderid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owner', to='wxcloudrun.usermanager', verbose_name='策略拥有者'),
        ),
        migrations.CreateModel(
            name='strategyorder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategyid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wxcloudrun.strategypool')),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wxcloudrun.usermanager')),
            ],
            options={
                'verbose_name': '策略模型交易订单',
                'verbose_name_plural': '策略模型交易订单',
                'db_table': 'strategyorder',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='stockpool',
            name='userid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wxcloudrun.usermanager'),
        ),
        migrations.CreateModel(
            name='indicatorexpression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=32, verbose_name='指标组')),
                ('prefixcoefficient', models.CharField(max_length=8, null=True, verbose_name='前缀系数')),
                ('condition', models.CharField(max_length=32, verbose_name='条件')),
                ('suffixcoefficient', models.CharField(max_length=8, null=True, verbose_name='后缀系数')),
                ('prefixindicator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prefix', to='wxcloudrun.indicators', verbose_name='前缀指标')),
                ('strategyid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wxcloudrun.strategypool')),
                ('suffixindicator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='suffix', to='wxcloudrun.indicators', verbose_name='后缀指标')),
            ],
            options={
                'verbose_name': '指标表达式',
                'verbose_name_plural': '指标表达式',
                'db_table': 'indicatorexpression',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='filter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=8, verbose_name='过滤器类别')),
                ('expression', models.CharField(max_length=256, verbose_name='过滤器表达式')),
                ('strategyid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wxcloudrun.strategypool')),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wxcloudrun.usermanager')),
            ],
            options={
                'verbose_name': '过滤器表',
                'verbose_name_plural': '过滤器表',
                'db_table': 'filter',
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='strategypool',
            unique_together={('strategyname', 'ownderid')},
        ),
    ]
